{"version":3,"file":"static/js/745.a22ba9a8.chunk.js","mappings":"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","sources":["components/content/Pages/VotingPage/VotingPage.tsx","redux/voting-selectors.ts","utils/usersActionLogsCreator.ts","webpack://pets-paw/./src/components/content/Pages/VotingPage/VotingPage.module.scss?bb96"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getIsBlack } from '../../../../redux/theme-selectors';\r\nimport { actions, addToFavourite, BreedImageType, getRandomBreed, setVote, UsersActionType } from '../../../../redux/voting-reducer';\r\nimport { getBreedImage, getIsFetching, getUserActions } from '../../../../redux/voting-selectors';\r\nimport { addUserActionCreator } from '../../../../utils/usersActionLogsCreator';\r\nimport Preloader from '../../../common/Preloader';\r\nimport classes from './VotingPage.module.scss'\r\n\r\n\r\nconst VotingPage: React.FC = () => {\r\n   const isFetching = useSelector(getIsFetching)\r\n   const dispatch = useDispatch<any>()\r\n\r\n   useEffect(() => {\r\n      dispatch(getRandomBreed())\r\n   }, [])\r\n\r\n\r\n   const breedImage: BreedImageType = useSelector(getBreedImage)\r\n   const url = breedImage.url ? breedImage.url : ''\r\n   const id = breedImage.id ? breedImage.id : ''\r\n\r\n   const usersActions = useSelector(getUserActions)\r\n\r\n   const onVote = (value: 0 | 1) => {\r\n      if (id)\r\n         dispatch(setVote(id, value))\r\n      if (!isFetching) {\r\n         addUserAction(id, value, 'add')\r\n         dispatch(getRandomBreed())\r\n      }\r\n   }\r\n   const addUserAction = addUserActionCreator(usersActions, () => dispatch(actions.removeUserAction()), (userAction) => dispatch(actions.addUserAction(userAction)))\r\n\r\n\r\n   const toFavourite = () => {\r\n      if (id)\r\n         dispatch(addToFavourite(id))\r\n      if (!isFetching) {\r\n         addUserAction(id, null, 'add')\r\n         dispatch(getRandomBreed())\r\n      }\r\n   }\r\n\r\n   const userActions = useSelector(getUserActions)\r\n   const isBlack = useSelector(getIsBlack)\r\n\r\n   return <div className={`${classes.votingPage} ${isBlack && classes.black}`}>\r\n      <div className={classes.imagesWrapper}>\r\n         {!isFetching &&\r\n            <img src={url} alt=\"\" />}\r\n         {isFetching &&\r\n            <Preloader />}\r\n         <div className={classes.btnContainer}>\r\n            <div>\r\n               <button onClick={() => onVote(1)}>like</button>\r\n               <button onClick={toFavourite}>favourite</button>\r\n               <button onClick={() => onVote(0)}>dislike</button>\r\n            </div>\r\n         </div>\r\n      </div>\r\n      <div className={`${classes.actionsWrapper} ${isBlack && classes.black}`}>\r\n         <UserActionLogs userActions={userActions} />\r\n      </div>\r\n   </div>\r\n}\r\n\r\nexport const UserActionLogs: React.FC<{ userActions: Array<UsersActionType> }> = ({ userActions }) => {\r\n   const createUserActions = (userActions: Array<UsersActionType> | null) => {\r\n      if (userActions) {\r\n         return userActions.map((action, index) => {\r\n            return <div className={`${classes.action} ${action.action === 'added to' && classes[`action_${action.type}`]}`} key={index}>\r\n               <span className={classes.time}>\r\n                  <span>{action.time}</span>\r\n               </span>\r\n               <span className={classes.text}>\r\n                  Image ID: <span>{action.id}</span> was {action.action} {action.type}\r\n               </span>\r\n            </div>\r\n         })\r\n      }\r\n      else {\r\n         return ''\r\n      }\r\n   }\r\n\r\n   return <>{createUserActions(userActions)}</>\r\n}\r\n\r\nexport default VotingPage","import { AppStateType } from \"./redux-store\"\r\n\r\nexport const getBreedImage = (state: AppStateType) => {\r\n   return state.voting.breedImage\r\n}\r\n\r\nexport const getIsFetching = (state: AppStateType) => {\r\n   return state.voting.isFetching\r\n}\r\n\r\nexport const getUserActions = (state: AppStateType) => {\r\n   return state.voting.userActions\r\n}\r\n\r\nexport const getFavouritesIds = (state: AppStateType) => {\r\n   return state.voting.favourites\r\n}\r\n\r\nexport const getFavByImageId = (state: AppStateType) => {\r\n   return state.voting.favByImageId\r\n}\r\n\r\n\r\n","import { UsersActionType } from \"../redux/voting-reducer\"\r\n\r\nexport const addUserActionCreator = (usersActions: Array<UsersActionType>, removeUserAction: () => void, addUserAction: (userAction: UsersActionType) => void, maxLength = 4) => (id: string, value: 0 | 1 | null, action: 'add' | 'remove') => {\r\n   const type = (() => {\r\n      switch (value) {\r\n         case 0:\r\n            return 'Dislikes'\r\n         case 1:\r\n            return 'Likes'\r\n         default:\r\n            return 'Favourites'\r\n      }\r\n   })()\r\n\r\n   if (usersActions.length >= maxLength) {\r\n      removeUserAction()\r\n   }\r\n\r\n   const act = (() => {\r\n      switch (action) {\r\n         case 'add':\r\n            return 'added to'\r\n         default:\r\n            return 'removed from'\r\n      }\r\n   })()\r\n\r\n   const userAction: UsersActionType = {\r\n      id: id,\r\n      action: act,\r\n      time: actualTime(),\r\n      type: type\r\n   }\r\n\r\n\r\n   addUserAction(userAction)\r\n}\r\n\r\nconst actualTime = () => {\r\n   const data = new Date\r\n   const hours = data.getHours() < 10 ? `0${data.getHours()}` : `${data.getHours()}`\r\n   const minutes = data.getMinutes() < 10 ? `0${data.getMinutes()}` : `${data.getMinutes()}`\r\n\r\n   return `${hours}:${minutes}`\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"votingPage\":\"VotingPage_votingPage__JuxDw\",\"imagesWrapper\":\"VotingPage_imagesWrapper__agQ70\",\"btnContainer\":\"VotingPage_btnContainer__zlwqY\",\"actionsWrapper\":\"VotingPage_actionsWrapper__WjmkA\",\"action\":\"VotingPage_action__f0xxB\",\"time\":\"VotingPage_time__Gyv-m\",\"text\":\"VotingPage_text__btIGr\",\"action_Likes\":\"VotingPage_action_Likes__vWV4R\",\"action_Favourites\":\"VotingPage_action_Favourites__k97FZ\",\"action_Dislikes\":\"VotingPage_action_Dislikes__6w8jh\",\"black\":\"VotingPage_black__BpwCE\"};"],"names":["UserActionLogs","userActions","map","action","index","className","classes","type","time","id","createUserActions","isFetching","useSelector","getIsFetching","dispatch","useDispatch","useEffect","getRandomBreed","breedImage","getBreedImage","url","usersActions","getUserActions","onVote","value","setVote","addUserAction","addUserActionCreator","actions","userAction","isBlack","getIsBlack","src","alt","onClick","addToFavourite","state","voting","getFavouritesIds","favourites","getFavByImageId","favByImageId","removeUserAction","maxLength","length","actualTime","data","Date","hours","getHours","minutes","getMinutes"],"sourceRoot":""}