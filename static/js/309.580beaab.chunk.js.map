{"version":3,"file":"static/js/309.580beaab.chunk.js","mappings":"kJA+BA,IA3B8B,WAE3B,IAAMA,GAAUC,EAAAA,EAAAA,IAAYC,EAAAA,GAEtBC,EAAQ,CACXC,YAAa,OACbC,WAAW,GAAD,OAAKL,EAAU,4BAA8B,WACvDM,QAAS,OACTC,OAAQ,OACRC,aAAc,OACdC,WAAY,UAYf,OAAO,gBAAKN,MAAOA,EAAZ,UACJ,iBAAMA,MAVS,CACfO,WAAY,OACZC,UAAW,SACXC,WAAY,MACZC,SAAU,OACVC,WAAY,OACZC,MAAO,WAIP,+B,kGCzBOC,EAAkB,SAACC,GAC7B,OAAOA,EAAMC,OAAOC,YAGVC,EAAgB,SAACH,GAC3B,OAAOA,EAAMC,OAAOG,YAGVC,EAAe,SAACL,GAC1B,OAAOA,EAAMC,OAAOK,W,wCCVvB,EAA+E,qCAA/E,EAA4H,0B,SC0E5H,EA/D6B,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAOXN,GAAalB,EAAAA,EAAAA,IAAYe,GAiCzBK,GAAapB,EAAAA,EAAAA,IAAYmB,GACzBG,GAAYtB,EAAAA,EAAAA,IAAYqB,GACxBtB,GAAUC,EAAAA,EAAAA,IAAYC,EAAAA,GAE5B,OAAO,gCACmB,IAAtBiB,EAAWO,SACT,SAACC,EAAA,EAAD,KACDN,IACC,gCAC0B,IAAtBF,EAAWO,SAAgB,iBAAKE,UAAS,UAAKC,EAAL,YAAuC7B,GAAW6B,GAAhE,kCAA2G,0BAAON,QAC9I,gBAAKK,UAAWE,EAAAA,EAAAA,WAAhB,UACG,gBAAKF,UAAS,UAAKE,EAAAA,EAAAA,aAAL,YAA6B9B,GAAW8B,EAAAA,EAAAA,OAAtD,SAzCLX,EAAWO,OAAS,EACdP,EAAWY,KAAI,SAAAC,GACnB,GAAIA,EAAMC,OAASD,EAAMC,MAAMC,IAC5B,OAAO,iBAAKN,UAAWE,EAAAA,EAAAA,WACLK,QAAS,SAACC,GAAD,OAZpB,SAACA,GAEjBZ,EAAS,kBAAD,OAAmBY,EAAEC,OAAOC,IAAM,CAAEC,SAAS,IAULC,CAAWJ,IAD3C,WAGJ,gBAAKK,IAAKT,EAAMC,MAAMC,IAAKQ,IAAyB,KAApBV,EAAMW,UAAmBX,EAAMY,KAAOZ,EAAMW,aAC5E,gBAAKL,GAAIN,EAAMM,GAAf,UAAmB,0BAAON,EAAMY,WAH3BZ,EAAMM,IAMd,IAAMO,EAAQb,EAAMc,OAASd,EAAMc,OAAO,GAAGF,KAAO,GAE9CH,EAAMT,EAAME,IAAMF,EAAME,IAzBvB,8EA0BDU,EAAOZ,EAAMY,KAAOZ,EAAMY,KAAOC,EACjCH,EAAMV,EAAMW,UAAYX,EAAMW,UACjCX,EAAMY,KAAOZ,EAAMY,KAAOC,EAE7B,OAAO,iBAAKjB,UAAWE,EAAAA,EAAAA,WAAhB,WAEJ,gBAAKW,IAAKA,EAAKC,IAAMV,EAAMW,UAAmBD,EAAPE,KACvC,0BAAK,2BAAM,0BAAOA,UAFbZ,EAAMM,QAQb,+BAqBTjB,IACE,SAAC0B,EAAA,EAAD","sources":["components/common/NoItemFound.tsx","redux/search-selectors.ts","webpack://pets-paw/./src/components/content/Pages/SearchPage/SearchPage.module.scss?1c2f","components/content/Pages/SearchPage/SearchPage.tsx"],"sourcesContent":["import React from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { getIsBlack } from \"../../redux/theme-selectors\"\r\n\r\nconst NoItemFound: React.FC = () => {\r\n\r\n   const isBlack = useSelector(getIsBlack)\r\n\r\n   const style = {\r\n      paddingLeft: '20px',\r\n      background: `${isBlack ? 'rgba(255, 255, 255, 0.05)' : '#F8F8F7'}`,\r\n      display: 'flex',\r\n      height: '60px',\r\n      borderRadius: '10px',\r\n      alignItems: 'center'\r\n   }\r\n\r\n   const textStyle = {\r\n      fontFamily: 'Jost',\r\n      fontStyle: 'normal',\r\n      fontWeight: '400',\r\n      fontSize: '16px',\r\n      lineHeight: '24px',\r\n      color: '#8C8C8C',\r\n   }\r\n\r\n   return <div style={style}>\r\n      <span style={textStyle}>No item found</span>\r\n   </div>\r\n}\r\n\r\nexport default NoItemFound","import { AppStateType } from \"./redux-store\"\r\n\r\nexport const getBreedsByname = (state: AppStateType) => {\r\n   return state.search.breedsList\r\n}\r\n\r\nexport const getIsFetching = (state: AppStateType) => {\r\n   return state.search.isFetching\r\n}\r\n\r\nexport const getBreedName = (state: AppStateType) => {\r\n   return state.search.breedName\r\n}\r\n\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"searchPage\":\"SearchPage_searchPage__b3O+U\",\"searchResultsFor\":\"SearchPage_searchResultsFor__qyIgt\",\"black\":\"SearchPage_black__FqDBs\"};","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { getBreedName, getBreedsByname, getIsFetching } from '../../../../redux/search-selectors';\r\nimport { getIsBlack } from '../../../../redux/theme-selectors';\r\nimport NoItemFound from '../../../common/NoItemFound';\r\nimport Preloader from '../../../common/Preloader';\r\nimport classes from '../BreedsPage/BreedsPage.module.scss'\r\nimport searchClasses from './SearchPage.module.scss'\r\n\r\nconst notFoundImage = 'https://s5.favim.com/orig/151213/avatar-kot-profil-gav-Favim.ru-3761175.jpg'\r\n\r\nconst SearchPage: React.FC = () => {\r\n   const navigate = useNavigate()\r\n\r\n   const getBreedId = (e: any) => {\r\n\r\n      navigate(`../breeds/info/${e.target.id}`, { replace: true })\r\n   }\r\n\r\n   const breedsList = useSelector(getBreedsByname)\r\n\r\n   const breedPhotos = () => {\r\n      if (breedsList.length > 0) {\r\n         return breedsList.map(breed => {\r\n            if (breed.image && breed.image.url) {\r\n               return <div className={classes.grid__item}\r\n                  key={breed.id} onClick={(e: any) => getBreedId(e)}>\r\n\r\n                  <img src={breed.image.url} alt={breed.alt_names === '' ? breed.name : breed.alt_names} />\r\n                  <div id={breed.id}><span>{breed.name}</span></div>\r\n               </div>\r\n            } else {\r\n               const quest = breed.breeds ? breed.breeds[0].name : ''\r\n\r\n               const src = breed.url ? breed.url : notFoundImage\r\n               const name = breed.name ? breed.name : quest\r\n               const alt = breed.alt_names ? breed.alt_names :\r\n                  breed.name ? breed.name : quest\r\n\r\n               return <div className={classes.grid__item}\r\n                  key={breed.id}>\r\n                  <img src={src} alt={!breed.alt_names ? name : alt} />\r\n                  <div><span><span>{name}</span></span></div>\r\n               </div>\r\n            }\r\n         })\r\n\r\n      } else {\r\n         return <></>\r\n      }\r\n   }\r\n\r\n   const isFetching = useSelector(getIsFetching)\r\n   const breedName = useSelector(getBreedName)\r\n   const isBlack = useSelector(getIsBlack)\r\n\r\n   return <>\r\n      {breedsList.length === 0 &&\r\n         <NoItemFound />}\r\n      {!isFetching &&\r\n         <>\r\n            {breedsList.length !== 0 && <div className={`${searchClasses.searchResultsFor} ${isBlack && searchClasses.black}`}>Search results for: <span>{breedName}</span></div>}\r\n            <div className={classes.breedsList}>\r\n               <div className={`${classes.grid__layout} ${isBlack && classes.black}`}>\r\n                  {breedPhotos()}\r\n               </div>\r\n            </div>\r\n         </>\r\n      }\r\n      {isFetching &&\r\n         <Preloader />}\r\n   </>\r\n}\r\n\r\nexport default SearchPage"],"names":["isBlack","useSelector","getIsBlack","style","paddingLeft","background","display","height","borderRadius","alignItems","fontFamily","fontStyle","fontWeight","fontSize","lineHeight","color","getBreedsByname","state","search","breedsList","getIsFetching","isFetching","getBreedName","breedName","navigate","useNavigate","length","NoItemFound","className","searchClasses","classes","map","breed","image","url","onClick","e","target","id","replace","getBreedId","src","alt","alt_names","name","quest","breeds","Preloader"],"sourceRoot":""}