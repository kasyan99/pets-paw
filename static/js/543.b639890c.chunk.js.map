{"version":3,"file":"static/js/543.b639890c.chunk.js","mappings":"kJA+BA,IA3B8B,WAE3B,IAAMA,GAAUC,EAAAA,EAAAA,IAAYC,EAAAA,GAEtBC,EAAQ,CACXC,YAAa,OACbC,WAAW,GAAD,OAAKL,EAAU,4BAA8B,WACvDM,QAAS,OACTC,OAAQ,OACRC,aAAc,OACdC,WAAY,UAYf,OAAO,gBAAKN,MAAOA,EAAZ,UACJ,iBAAMA,MAVS,CACfO,WAAY,OACZC,UAAW,SACXC,WAAY,MACZC,SAAU,OACVC,WAAY,OACZC,MAAO,WAIP,+B,oGCjBOC,EAAgB,SAACC,GAC3B,OAAOA,EAAMC,MAAMC,YAWTC,EAAqB,SAACH,GAChC,OAAOA,EAAMC,MAAMG,W,2DCgDtB,EA5D8C,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACxCC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACPF,GAASG,EAAAA,EAAAA,IAAaJ,MACtB,CAACA,IAEJ,IAAMD,EAAYM,OAAOC,QAAO3B,EAAAA,EAAAA,IAAYmB,IAEtCD,GAAalB,EAAAA,EAAAA,IAAYe,GA2BzBhB,GAAUC,EAAAA,EAAAA,IAAYC,EAAAA,GAE5B,OAAO,gCACkB,IAArBmB,EAAUQ,SACR,SAACC,EAAA,EAAD,KACDX,IACC,iBAAKY,UAAWC,EAAAA,EAAAA,WAAhB,WACG,gBAAKD,UAAS,UAAKC,EAAAA,EAAAA,aAAL,YAAkChC,GAAWgC,EAAAA,EAAAA,OAA3D,SA1BFX,EAAUQ,OAAS,EACbR,EAAUY,KAAI,SAACC,GAEnB,OAAO,iBAAKH,UAAS,UAAKC,EAAAA,EAAAA,WAAL,YAAgCA,EAAAA,EAAAA,oBAA9C,WAEJ,gBAAKG,IAAKD,EAAME,IAAKC,IAAKH,EAAMI,MAChC,0BAAK,oBAAQC,QAAS,WAZT,IAACC,IAaMN,EAAMM,QAZnCjB,GAASkB,EAAAA,EAAAA,IAAWD,KAcRT,UAAqB,IAAVT,EAAcU,EAAAA,EAAAA,kBAAiCA,EAAAA,EAAAA,qBAHxD,yBAGkH,IAAVV,EAAc,QAAU,kBALhIY,EAAMI,QAWV,2BAcJ,gBAAKP,UAAWC,EAAAA,EAAAA,cAAhB,UACG,gBAAKD,UAAWW,EAAAA,EAAAA,sBAQxBvB,IACE,SAACwB,EAAA,EAAD,S,mBClET,KAAgB,WAAa,+BAA+B,cAAgB,kCAAkC,aAAe,iCAAiC,eAAiB,mCAAmC,OAAS,2BAA2B,KAAO,yBAAyB,KAAO,yBAAyB,aAAe,iCAAiC,kBAAoB,sCAAsC,gBAAkB,oCAAoC,MAAQ","sources":["components/common/NoItemFound.tsx","redux/likes-selectors.ts","components/content/Pages/LikesPage/LikesPage.tsx","webpack://pets-paw/./src/components/content/Pages/VotingPage/VotingPage.module.scss?bb96"],"sourcesContent":["import React from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { getIsBlack } from \"../../redux/theme-selectors\"\r\n\r\nconst NoItemFound: React.FC = () => {\r\n\r\n   const isBlack = useSelector(getIsBlack)\r\n\r\n   const style = {\r\n      paddingLeft: '20px',\r\n      background: `${isBlack ? 'rgba(255, 255, 255, 0.05)' : '#F8F8F7'}`,\r\n      display: 'flex',\r\n      height: '60px',\r\n      borderRadius: '10px',\r\n      alignItems: 'center'\r\n   }\r\n\r\n   const textStyle = {\r\n      fontFamily: 'Jost',\r\n      fontStyle: 'normal',\r\n      fontWeight: '400',\r\n      fontSize: '16px',\r\n      lineHeight: '24px',\r\n      color: '#8C8C8C',\r\n   }\r\n\r\n   return <div style={style}>\r\n      <span style={textStyle}>No item found</span>\r\n   </div>\r\n}\r\n\r\nexport default NoItemFound","import { AppStateType } from \"./redux-store\"\r\n\r\nexport const getCurrentPage = (state: AppStateType) => {\r\n   return state.likes.currentPage\r\n}\r\n\r\nexport const getLimit = (state: AppStateType) => {\r\n   return state.likes.limit\r\n}\r\n\r\nexport const getIsFetching = (state: AppStateType) => {\r\n   return state.likes.isFetching\r\n}\r\n\r\nexport const getTotalCount = (state: AppStateType) => {\r\n   return state.likes.totalImagesCount\r\n}\r\n\r\nexport const getUserActions = (state: AppStateType) => {\r\n   return state.likes.userActions\r\n}\r\n\r\nexport const getLikedImagesList = (state: AppStateType) => {\r\n   return state.likes.likesList\r\n}","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { deleteVote, getVotesList } from '../../../../redux/likes-reducer';\r\nimport { getIsFetching, getLikedImagesList } from '../../../../redux/likes-selectors';\r\nimport breedClasses from '../BreedsPage/BreedsPage.module.scss'\r\nimport votingClasses from '../VotingPage/VotingPage.module.scss'\r\nimport Preloader from '../../../common/Preloader';\r\nimport NoItemFound from '../../../common/NoItemFound';\r\nimport { getIsBlack } from '../../../../redux/theme-selectors';\r\n\r\n//it will be LikesPage if value = 1, DislikesPage if value = 0\r\nconst LikesPage: React.FC<{ value: 0 | 1 }> = ({ value }) => {\r\n   const dispatch = useDispatch<any>()\r\n\r\n   useEffect(() => {\r\n      dispatch(getVotesList(value))\r\n   }, [value])\r\n\r\n   const likesList = Object.values(useSelector(getLikedImagesList))\r\n\r\n   const isFetching = useSelector(getIsFetching)\r\n\r\n   const removeLikedImage = (vote_id: string) => {\r\n      dispatch(deleteVote(vote_id))\r\n   }\r\n\r\n   const imagesList = () => {\r\n\r\n      if (likesList.length > 0) {\r\n         return likesList.map((image: any) => {\r\n            // const fav_id = breed.id\r\n            return <div className={`${breedClasses.grid__item} ${breedClasses.grid__item_gallery}`}\r\n               key={image.id}>\r\n               <img src={image.url} alt={image.id} />\r\n               <div><button onClick={() => {\r\n                  removeLikedImage(image.vote_id);\r\n                  // addUserAction(breed.image.id, null, 'remove') \r\n               }} className={value === 1 ? breedClasses.remove_from_likes : breedClasses.remove_from_dislikes}>remove from {value === 1 ? 'likes' : 'dislikes'}</button>\r\n               </div>\r\n            </div>\r\n         })\r\n\r\n      } else {\r\n         return <></>\r\n      }\r\n   }\r\n\r\n   const isBlack = useSelector(getIsBlack)\r\n\r\n   return <>\r\n      {likesList.length === 0 &&\r\n         <NoItemFound />}\r\n      {!isFetching &&\r\n         <div className={breedClasses.breedsList}>\r\n            <div className={`${breedClasses.grid__layout} ${isBlack && breedClasses.black}`}>\r\n               {imagesList()}\r\n            </div>\r\n            <div className={breedClasses.bottomWrapper}>\r\n               <div className={votingClasses.actionsWrapper}>\r\n                  {/* <UserActionLogs userActions={userActions} /> */}\r\n               </div>\r\n               {/* <Paginator getCurrentPage={getCurrentPage} getItemsCount={getTotalCount} getFilter={() => ({ limitItems: limit })} prevNext={prevNext} /> */}\r\n            </div>\r\n\r\n         </div>\r\n      }\r\n      {isFetching &&\r\n         <Preloader />}\r\n   </>\r\n}\r\n\r\nexport default LikesPage\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"votingPage\":\"VotingPage_votingPage__JuxDw\",\"imagesWrapper\":\"VotingPage_imagesWrapper__agQ70\",\"btnContainer\":\"VotingPage_btnContainer__zlwqY\",\"actionsWrapper\":\"VotingPage_actionsWrapper__WjmkA\",\"action\":\"VotingPage_action__f0xxB\",\"time\":\"VotingPage_time__Gyv-m\",\"text\":\"VotingPage_text__btIGr\",\"action_Likes\":\"VotingPage_action_Likes__vWV4R\",\"action_Favourites\":\"VotingPage_action_Favourites__k97FZ\",\"action_Dislikes\":\"VotingPage_action_Dislikes__6w8jh\",\"black\":\"VotingPage_black__BpwCE\"};"],"names":["isBlack","useSelector","getIsBlack","style","paddingLeft","background","display","height","borderRadius","alignItems","fontFamily","fontStyle","fontWeight","fontSize","lineHeight","color","getIsFetching","state","likes","isFetching","getLikedImagesList","likesList","value","dispatch","useDispatch","useEffect","getVotesList","Object","values","length","NoItemFound","className","breedClasses","map","image","src","url","alt","id","onClick","vote_id","deleteVote","votingClasses","Preloader"],"sourceRoot":""}